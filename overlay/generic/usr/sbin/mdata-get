#!/bin/bash
#
# Copyright (c) 2013 Joyent Inc., All rights reserved.
#
# EXIT CODES:
#
#  0 - successfully grabbed data (dumped to stdout)
#  1 - not found: we talked to metadata agent but it didn't have a value for key
#  2 - error: we talked to metadata agent but it responded with an error
#  3 - usage problem: fix your cmdline and try again
# 10 - unable to talk to socket (try again)
#

key=$1
if [[ -z ${key} ]]; then
    echo "Usage: $0 <key>" >&2
    exit 3
fi

NC_SOCK=
DISABLE_ECHO="yes"

case $(uname -s) in
    Linux)
        SERIAL_DEV="/dev/ttyS1"
    ;;
    FreeBSD)
        SERIAL_DEV="/dev/cuau1"
    ;;
    SunOS)
        NC_SOCK="/.zonecontrol/metadata.sock"
        DISABLE_ECHO="no"
    ;;
    *)
        echo "Don't know which serial to use for $(uname -s)" >&2
        exit 1
    ;;
esac

if [[ -n ${NC_SOCK} ]]; then
    coproc nc -U ${NC_SOCK}
    exec <&${COPROC[0]} 3>&${COPROC[1]}
else
    exec <${SERIAL_DEV} 3>>${SERIAL_DEV}
fi

IFS=$'\n'
if [[ ${DISABLE_ECHO} == "yes" ]]; then
    stty -echo
fi

echo "GET ${key}" >&3
if [[ $? != 0 ]]; then
    echo "Error getting metadata for key '${key}': failed write" >&2
    exit 10
fi

# First line will be a status.
read status
read_result=$?
if [[ ${status} == "NOTFOUND" ]]; then
    echo "No metadata for '${key}'" >&2
    exit 1
elif [[ ${read_result} != 0 ]]; then
    echo "Error getting metadata for key '${key}': failed read" >&2
    exit 10
elif [[ ${status} != "SUCCESS" ]]; then
    echo "Error getting metadata for key '${key}': ${status}" >&2
    exit 2
fi

export PATH=$PATH:/usr/perl5/bin:/opt/local/bin:/usr/local/bin:/usr/local/perl5/bin
perl -ne 'chomp; if (/^\.$/) { exit 0 }; if (/^\./) { s/^.//; } print "$_\n"'

exit 0
